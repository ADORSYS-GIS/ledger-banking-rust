name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Start PostgreSQL Database
      run: docker compose up -d postgres

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to start..."
        until docker compose exec postgres pg_isready -U user -d mydb; do
          sleep 2
        done
        echo "PostgreSQL is ready."

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy
        
    - name: Install SQLx CLI
      run: cd ./banking-db-postgres && cargo install sqlx-cli --no-default-features --features postgres

    - name: Run database migrations
      env:
        DATABASE_URL: postgresql://user:password@localhost:5432/mydb
      run: sqlx migrate run --source banking-db-postgres/migrations

    - name: Build
      run: cargo build --workspace --verbose

    - name: Run tests for PostgreSQL
      env:
        DATABASE_URL: postgresql://user:password@localhost:5432/mydb
      run: cargo test --workspace --features postgres_tests --verbose -- --test-threads=1

    - name: Run clippy
      run: cargo clippy --workspace -- -D warnings

    - name: Stop Databases
      if: always()
      run: docker compose down -v
